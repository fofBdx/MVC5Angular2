{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/page1/page1.component.css","webpack:///./src/app/page1/page1.component.html","webpack:///./src/app/page1/page1.component.ts","webpack:///./src/app/page2/page2.component.css","webpack:///./src/app/page2/page2.component.html","webpack:///./src/app/page2/page2.component.ts","webpack:///./src/app/page3/page3.component.css","webpack:///./src/app/page3/page3.component.html","webpack:///./src/app/page3/page3.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div>\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './app.routes';\r\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { Page1Component } from './page1/page1.component';\nimport { Page2Component } from './page2/page2.component';\nimport { Page3Component } from './page3/page3.component';\nimport { NavComponent } from './nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Page1Component,\n    Page2Component,\n    Page3Component,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,   \n    RouterModule.forRoot(ROUTES)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\r\nimport { Page1Component} from './page1/page1.component';\r\nimport { Page2Component } from './page2/page2.component';\r\nimport { Page3Component } from './page3/page3.component';\r\n\r\nexport const ROUTES: Routes = [\r\n  { path: 'Home/Angular', redirectTo: 'Home/Angular/page1' },\r\n  { path: 'Home/Angular/page1', component: Page1Component },\r\n  { path: 'Home/Angular/page2', component: Page2Component },\r\n  { path: 'Home/Angular/page3', component: Page3Component }\r\n];\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<a class=\\\"btn btn-default\\\"\\r\\n   routerLink=\\\"/Home/Angular/page1\\\"\\r\\n   routerLinkActive=\\\"active\\\"\\r\\n   href=\\\"#\\\" role=\\\"button\\\">Page 1</a>\\r\\n<a class=\\\"btn btn-default\\\"\\r\\n   routerLink=\\\"/Home/Angular/page2\\\"\\r\\n   routerLinkActive=\\\"active\\\"\\r\\n   href=\\\"#\\\" role=\\\"button\\\">Page 2</a>\\r\\n<a class=\\\"btn btn-default\\\"\\r\\n   routerLink=\\\"/Home/Angular/page3\\\"\\r\\n   routerLinkActive=\\\"active\\\"\\r\\n   href=\\\"#\\\" role=\\\"button\\\">Page 3</a>\\r\\n<a class=\\\"btn btn-default\\\"\\r\\n   href=\\\"/Home/Index\\\" role=\\\"button\\\">.Net nav -> Index</a>\\r\\n<a class=\\\"btn btn-default\\\"\\r\\n   href=\\\"/Home/Angular/page2\\\" role=\\\"button\\\">Angular with page reload -> page 2</a>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<p>\\n  page1 works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page1',\n  templateUrl: './page1.component.html',\n  styleUrls: ['./page1.component.css']\n})\nexport class Page1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<p>\\n  page2 works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page2',\n  templateUrl: './page2.component.html',\n  styleUrls: ['./page2.component.css']\n})\nexport class Page2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<p>\\n  page3 works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page3',\n  templateUrl: './page3.component.html',\n  styleUrls: ['./page3.component.css']\n})\nexport class Page3Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}